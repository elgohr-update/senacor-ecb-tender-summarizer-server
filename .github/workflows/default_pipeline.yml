name: ECB Summarizer Web Server

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set Environment Variables
      run: |
        IMG=cat-siren
        echo "::set-env name=BUILD_VER::1.0.$GITHUB_RUN_NUMBER"
        echo "::set-env name=IMG::${IMG}"
        echo "::set-env name=IMAGE::ghcr.io/${{ github.repository_owner }}/${IMG}"
        echo "::set-env name=BUILD_DATE::$(date +'%Y-%m-%d %H:%M:%S')"
        echo "::set-env name=GIT_SHA::$(echo ${{ github.sha }} | cut -c1-7)"
        echo "::set-env name=GIT_REF::$(git symbolic-ref -q --short HEAD || git describe --tags --exact-match)"
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8.x
    - name: Create and activate conda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: ecb
        environment-file: environment.yml
        python-version: 3.8
        auto-activate-base: false
    - name: Lint with flake8
      shell: bash -l {0}
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install -e .
        coverage run -m --source=./summarizer pytest
      shell: bash -l {0}
    - name: Code Coverage
      run: |
        coverage report -m
      shell: bash -l {0}
    - name: lint Dockerfile
      uses: ghe-actions/dockerfile-validator@v1
      with:
        dockerfile: 'Dockerfile'
        lint: 'hadolint'
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Container Registry
      uses: docker/login-action@v1
      with:
        registry: ezbpitch.azurecr.io
        username: ${{ secrets.service_principal }}
        password: ${{ secrets.service_principal_password }}
    - name: Docker build and push
      uses: docker/build-push-action@v2
      with:
        context: ./siren
        file: ./siren/Dockerfile
        labels: |
          org.opencontainers.image.authors=${{ github.repository_owner }}
          org.opencontainers.image.created=${{ env.BUILD_DATE }}
          org.opencontainers.image.description=Created from commit ${{ env.GIT_SHA }} and ref ${{ env.GIT_REF }}
          org.opencontainers.image.ref.name=${{ env.GIT_REF }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.version=${{ env.BUILD_VER }}
        tags: |
          ${{ env.IMAGE }}:latest
          ${{ env.IMAGE }}:${{ env.GIT_REF }}
          ${{ env.IMAGE }}:${{ env.GIT_SHA }}
          ${{ env.IMAGE }}:${{ env.BUILD_VER }}
        push: true
        secrets: |
          GIT_AUTH_TOKEN=${{ secrets.service_principal_password }}