apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${APP_NAME}
    team: ${TEAM}
    domain: ${DOMAIN}
    app.kubernetes.io/name: ${APP_NAME}
    app.kubernetes.io/version: ${VERSION}
    app.kubernetes.io/component: microservice
    app.kubernetes.io/part-of: ecb-pitch
    app.kubernetes.io/managed-by: kubectl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${APP_NAME}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      namespace: ${NAMESPACE}
      labels:
        app: ${APP_NAME}
    spec:
      automountServiceAccountToken: false
      containers:
      - name: main
        image: ${REGISTRY_URL}/${APP_NAME}:${GIT_SHA_LONG}
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        livenessProbe:
            httpGet:
              path: "/probes/healthz"
              port: 8000
            initialDelaySeconds: 120
            periodSeconds: 60
            failureThreshold: 5
        readinessProbe:
          httpGet:
            path: "/probes/healthz"
            port: 8000
          initialDelaySeconds: 120
          periodSeconds: 60
          failureThreshold: 5
        terminationMessagePath: /dev/stdout
        volumeMounts:
          - mountPath: /cache
            name: model-data
        envFrom:
          - configMapRef:
              name: summarizer-server-configmap
        env:
          - name: TENANT_ID
            valueFrom:
              secretKeyRef:
                name: service-principal-secret
                key: tenant-id
          - name: CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: service-principal-secret
                key: client-id
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: service-principal-secret
                key: client-secret
      volumes:
        - name: model-data
          persistentVolumeClaim:
            claimName: ${APP_NAME}-model-azure-managed-disk